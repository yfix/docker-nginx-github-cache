# rawgit

# servers configuration
root /var/www/default;
limit_req_zone $referer_domain$uri zone=rawgit.throttling:5m rate=20r/s;
proxy_cache_path /var/cache/nginx/rawgit keys_zone=rawgit.cache:30m max_size=10g inactive=30d use_temp_path=off;

# file extension to mime-type mapping
# kind of workaround because nginx can detect mime-type only for local file
map $extension $detect_content_type {
    ~*^xml|xsl|xsd$       application/xml;
    ~*^atom$              application/atom+xml;
    ~*^xhtml|xht$         application/xhtml+xml;
    ~*^xslt$              application/xslt+xml;
    ~*^rss$               application/rss+xml;

    ~*^ttl$               text/turtle;
    ~*^vtt$               text/vtt;
    ~*^csv$               text/csv;
    ~*^n3$                text/n3;
    ~*^nt$                application/n-triples;
    ~*^rdf|owl$           application/rdf+xml;

    ~*^s?html?$           text/html;
    ~*^htc$               text/x-component;
    ~*^manifest|appcache$ text/cache-manifest;

    ~*^css$               text/css;

    ~*^js$                application/javascript;
    ~*^json$              application/json;
    ~*^jsonld$            application/ld+json;
    ~*^geojson$           application/vnd.geo+json;
    ~*^coffee$            text/x-coffeescript;
    ~*^hbs|handlebars$    text/x-handlebars-template;

    ~*^vcf|vcard$         text/vcard;
    ~*^md|markdown$       text/x-markdown;
    ~*^yml|yaml$          text/yaml;

    ~*^woff$              application/font-woff;
    ~*^woff2$             application/font-woff2;
    ~*^eot$               application/vnd.ms-fontobject;
    ~*^otf$               application/x-font-otf;
    ~*^ttc$               application/octet-stream;
    ~*^svg$               image/svg+xml;
    ~*^pdf$               application/pdf;

    ~*^swf$               application/x-shockwave-flash;
    ~*^kml$               application/vnd.google-earth.kml+xml;

    default               '';
}

# defines which extensions should include charset definition
map $extension $content_type_charset_string {
    ~*^woff2?|eot|otf|ttc|svg|pdf|swf|kml$ '';
    default '; charset=utf-8';
}

map $http_referer $referer_domain {
    ~^https?://(?<domain>[^/]+) $domain;
}

map $host $origin {
    ~*^rawbb(cdn)?.yfix.net$ bitbucket.org;
    ~*^rawgit(cdn)?.yfix.net$ raw.githubusercontent.com;
    ~*^gist(cdn)?.yfix.net$ gist.githubusercontent.com;
}

server {
    listen 80 default_server;
    server_name _;

    location ~* ^/.+/.+/.+/(.+/)*$ {
        rewrite ^(.*)/$ $1/index.html last;
    }

    location ~* ^/.+/.+/.+/.+\.(?<extension>[a-zA-Z0-9]+)$ {
        # if we do not know this extension, let's redirect
        if ($detect_content_type = '') {
            add_header Content-Type text/html;
            return 301 https://$origin$request_uri;
        }

        # to be able to resolve remote server name from a variable
		resolver 8.8.8.8 8.8.4.4;
		resolver_timeout 5s;

        error_page 404 /404.html;
#        limit_req zone=rawgit.throttling;

#		proxy_set_header X-Real-IP $remote_addr;
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		client_max_body_size        10m;
		client_body_buffer_size     128k;
		proxy_connect_timeout       5;
		proxy_send_timeout          5;
		proxy_read_timeout          30;
		proxy_buffer_size           256k;
		proxy_buffers               4 256k;
		proxy_busy_buffers_size     256k;
		proxy_temp_file_write_size  256k;
		proxy_max_temp_file_size    0;

        # caching
		# https://www.nginx.com/blog/nginx-caching-guide/
#		proxy_store /var/cache/nginx/store$original_uri;
        proxy_cache rawgit.cache;
        proxy_cache_key "$origin$uri";
        proxy_cache_valid any 15m;
        proxy_http_version 1.1;
        proxy_intercept_errors on;
		proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504 http_404;
		proxy_cache_revalidate on;
		proxy_cache_lock on;
		proxy_cache_lock_timeout 10s;
		proxy_cache_methods GET HEAD;
		proxy_cache_min_uses 1;
		proxy_cache_bypass $cookie_nocache $arg_nocache $arg_debug;
#		proxy_no_cache $cookie_nocache $arg_nocache $arg_debug;
        proxy_pass https://$origin;

        # we need to hide these headers in order to redefine them
        # if we don't, they will be set twice

        proxy_hide_header Access-Control-Allow-Origin;
        proxy_hide_header Cache-Control;
        proxy_hide_header Content-Disposition;
        proxy_hide_header Content-Security-Policy;
        proxy_hide_header Content-Type;
        proxy_hide_header Source-Age;
        proxy_hide_header Vary;
        proxy_hide_header Via;
        proxy_hide_header X-Cache;
        proxy_hide_header X-Cache-Hits;
        proxy_hide_header X-Fastly-Request-ID;
        proxy_hide_header X-Frame-Options;
        proxy_hide_header X-Geo-Block-List;
        proxy_hide_header X-GitHub-Request-Id;
        proxy_hide_header X-Robots-Tag;
        proxy_hide_header X-Served-By;
        proxy_hide_header X-XSS-Protection;
        proxy_hide_header X-Timer;

        # robots, go away!
        add_header X-Robots-Tag noindex,nofollowe;
        add_header Access-Control-Allow-Origin *;
        add_header X-Rawgit-Cache-Status $upstream_cache_status;
        add_header Content-Type $detect_content_type$content_type_charset_string;
    }
}
